{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"8bAmGeA,EAhGK,SAACC,GAGnB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAkDA,OACE,uBAAMC,SAfc,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAc,CAClBC,MAAOV,EACPW,QAAST,EACTU,KAAM,IAAIC,KAAKT,IAEjBN,EAAMgB,kBAAmBL,GACzBR,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAIf,UACE,sBAAKU,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEC,KAAK,OACLC,MAAOjB,EACPkB,SAhDiB,SAACX,GAC1BN,EAAgBM,EAAMY,OAAOF,aAkDzB,sBAAKF,UAAU,uBAAf,UACE,2CACA,uBACEC,KAAK,SACLC,MAAOf,EACPkB,IAAI,OACJC,KAAK,OACLH,SA/CkB,SAACX,GAC3BJ,EAAiBI,EAAMY,OAAOF,aAiD1B,sBAAKF,UAAU,uBAAf,UACE,yCACA,uBACEC,KAAK,OACLC,MAAOb,EACPgB,IAAI,aACJE,IAAI,aACJJ,SAlDgB,SAACX,GACzBF,EAAeE,EAAMY,OAAOF,gBAqD1B,sBAAKF,UAAU,uBAAf,UACE,wBAAQC,KAAK,SAASO,QAASzB,EAAM0B,SAArC,qBACA,wBAAQR,KAAK,SAAb,gCCrDOS,EAlCI,SAAC3B,GAClB,MAAkCC,oBAAS,GAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KAkBA,OACE,sBAAKZ,UAAU,cAAf,WACIW,GACA,wBAAQH,QAVc,WAC1BI,GAAa,IAST,6BAEDD,GACC,cAAC,EAAD,CACEZ,kBAvBuB,SAACc,GAC9B,IAAMnB,EAAW,2BACZmB,GADY,IAEfC,GAAIC,KAAKC,SAASC,aAEpBlC,EAAMmC,aAAaxB,GACnBkB,GAAa,IAkBPH,SAXmB,WACzBG,GAAa,UCfFO,G,YALF,SAACpC,GACV,IAAMqC,EAAU,QAAUrC,EAAMiB,UAClC,OAAO,qBAAKA,UAAWoB,EAAhB,SAA0BrC,EAAMsC,aCuB1BC,G,MAvBQ,SAACvC,GAOtB,OACE,qBAAKiB,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQA,UAAU,eAAeE,MAAOnB,EAAMwC,SAAUpB,SARhC,SAACX,GAC7BT,EAAMyC,eAAehC,EAAMY,OAAOF,QAO9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCLKuB,G,MAdK,SAAC1C,GACnB,IAAM2C,EAAQ3C,EAAMc,KAAK8B,eAAe,QAAS,CAAED,MAAO,SACpDE,EAAM7C,EAAMc,KAAK8B,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAO9C,EAAMc,KAAKiC,cAExB,OACE,sBAAK9B,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsC0B,IACtC,qBAAK1B,UAAU,qBAAf,SAAqC6B,IACrC,qBAAK7B,UAAU,oBAAf,SAAoC4B,SCW3BG,G,MAhBK,SAAChD,GAGnB,OACE,6BACA,eAAC,EAAD,CAAMiB,UAAU,eAAhB,UACC,cAAC,EAAD,CAAaH,KAAMd,EAAMc,OACxB,sBAAKG,UAAU,4BAAf,UACE,6BAAKjB,EAAMY,QACX,sBAAKK,UAAU,sBAAf,cAAuCjB,EAAMa,oBCQtCoC,G,MAlBM,SAAAjD,GAEjB,OAA0B,IAAvBA,EAAMkD,MAAMC,OACJ,oBAAIlC,UAAU,0BAAd,gCAGJ,oBAAIA,UAAU,gBAAd,SACFjB,EAAMkD,MAAME,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAEEzC,MAAOyC,EAAQzC,MACfC,OAAQwC,EAAQxC,OAChBC,KAAMuC,EAAQvC,MAHTuC,EAAQtB,W,OCURuB,G,MApBE,SAACtD,GAChB,IAAIuD,EAAgB,KAMpB,OAJIvD,EAAMwD,SAAW,IACnBD,EAAgBvB,KAAKyB,MAAOzD,EAAMmB,MAAQnB,EAAMwD,SAAY,KAAO,KAInE,sBAAKvC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVyC,MAAO,CAAEC,OAAQJ,OAGrB,qBAAKtC,UAAU,mBAAf,SAAmCjB,EAAM4D,aCEhCC,G,MAhBD,SAAC7D,GACX,IAAM8D,EAAmB9D,EAAM+D,WAAWX,KAAI,SAAAY,GAAS,OAAIA,EAAU7C,SAC/D8C,EAAejC,KAAKR,IAAL,MAAAQ,KAAI,YAAQ8B,IACnC,OACE,qBAAK7C,UAAU,QAAf,SACGjB,EAAM+D,WAAWX,KAAI,SAACY,GAAD,OACpB,cAAC,EAAD,CAEE7C,MAAO6C,EAAU7C,MACjBqC,SAAUS,EACVL,MAAOI,EAAUJ,OAHVI,EAAUJ,cCkBZM,EA1BO,SAAAlE,GAClB,IAD2B,EACrBmE,EAAkB,CACpB,CAACP,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,GACrB,CAACyC,MAAM,MAAOzC,MAAO,IAbE,cAkBLnB,EAAMoE,UAlBD,IAkB3B,2BAAqC,CAAC,IAA3Bf,EAA0B,QAEjCc,EADqBd,EAAQvC,KAAKuD,YACJlD,OAASkC,EAAQxC,QApBxB,8BAuB3B,OAAO,cAAC,EAAD,CAAOkD,WAAcI,KCSjBG,EA3BE,SAACtE,GAChB,MAAwCC,mBAAS,QAAjD,mBAAOsE,EAAP,KAAqBC,EAArB,KAMMC,EAAmBzE,EAAMkD,MAAMwB,QAAO,SAACrB,GAC3C,OAAOA,EAAQvC,KAAKiC,cAAcb,aAAeqC,KAKnD,OACE,8BACE,eAAC,EAAD,CAAMtD,UAAU,WAAhB,UACE,cAAC,EAAD,CACEuB,SAAU+B,EACV9B,eAfoB,SAACkC,GAC3BH,EAAgBG,MAgBZ,cAAC,EAAD,CAAeP,SAAUK,IACzB,cAAC,EAAD,CAAcvB,MAAOuB,UCxBvBG,EAAiB,CACrB,CACE7C,GAAI,OACJnB,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEgB,GAAI,OACJnB,MAAO,oBACPC,OAAQ,KACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEgB,GAAG,OACHnB,MAAO,eACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEgB,GAAG,OACHnB,MAAO,mBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,MAmCb8D,EA9BH,WACV,MAA+B5E,mBAAS2E,GAAxC,mBAAOR,EAAP,KAAiBU,EAAjB,KAQE,OACA,gCACI,cAAC,EAAD,CAAY3C,aARQ,SAACkB,GACzByB,GAAY,SAAAC,GACV,MAAM,CAAE1B,GAAR,mBAAoBe,UAOlB,cAAC,EAAD,CAAUlB,MAASkB,QCxCdY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.26a2c8ce.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  // okay ra tagsa-tagsaon ug useState ang mga events parehas sa 3 lines nga gicomment below:\r\n\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  //okay ra sad kad-ahon tanan parehas ani: passing object inside the useState. Not a string but objecg using curly braces.\r\n\r\n  //    const [userInput, setUserInput] = useState({\r\n  //         enteredTitle: '',\r\n  //         enteredAmount: '',\r\n  //         enteredDate: ''\r\n  //    });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value); //  ---> kani gamiton basta tagsa2 ang useState\r\n    //  setUserInput({\r\n    //    ...userInput,\r\n    //    enteredTitle: event.target.value,\r\n    //  });\r\n\r\n    //    setUserInput((prevState) => {\r\n    //    return {...prevState, enteredTitle: event.target.value};\r\n    //    });\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value); // ---> kani gamiton basta tagsa2 ang useState\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value); // ---> kani gamiton basta tagsa2 ang useState\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData( expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}> Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n   \r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport \"./ExpenseForm\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n ","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select className='yearSelector' value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n          <option value='2018'>2018</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';  // iimport ang useState\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n// Kinahanglan sulod sa component function ibutang ang useState\r\n  \r\n  return (\r\n    <li>\r\n    <Card className='expense-item'>\r\n     <ExpenseDate date={props.date}/>\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className='expense-item__price'>${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem; // kinahanglan eexport para magamit or maaccess sa lain nga components\r\n\r\n//Note: Mogamit ta ug useState para mailisan ang initial values sa imong components. \r\n\r\n/** \r\n * State can be updated in many ways!\r\nThus far, we update our state upon user events (e.g. upon a click).\r\n\r\nThat's very common but not required for state updates! You can update states for whatever reason you may have.\r\n\r\nLater in the course, we'll see Http requests that complete (where we then want to update the state based on the \r\n  Http response we got back) but you could also be updating state because a timer (set with setTimeout()) expired for example.\r\n * \r\n * \r\n */\r\n","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpenseList.css';\r\n\r\nconst ExpensesList = props => {\r\n  \r\n    if(props.items.length === 0){\r\n        return <h2 className='expenses-list__fallback'>Found No Expenses.</h2>; \r\n    }\r\n\r\n    return <ul className='expenses-list'>\r\n        {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n\r\n};\r\nexport default ExpensesList;","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>  \r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value); \r\n    const totalMaximum = Math.max(...dataPointsValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key = {dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        {label:\"Jan\", value: 0},\r\n        {label:\"Feb\", value: 0},\r\n        {label:\"Mar\", value: 0},\r\n        {label:\"Apr\", value: 0},\r\n        {label:\"May\", value: 0},\r\n        {label:\"Jun\", value: 0},\r\n        {label:\"Jul\", value: 0},\r\n        {label:\"Aug\", value: 0},\r\n        {label:\"Sep\", value: 0},\r\n        {label:\"Oct\", value: 0},\r\n        {label:\"Nov\", value: 0},\r\n        {label:\"Dec\", value: 0},\r\n        \r\n\r\n    ];\r\n\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n\r\n    }\r\n    return <Chart dataPoints = {chartDataPoints} />\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\n\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  //Condition kung walang data sa year na pinili\r\n \r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, {useState} from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'sku1',\n    title: \"Car Insurance\",\n    amount: 302.98,\n    date: new Date(2021, 2, 30),\n  },\n  {\n    id: \"sku2\",\n    title: \"Birthday Expenses\",\n    amount: 1500.0,\n    date: new Date(2020, 7, 23),\n  },\n  {\n    id:\"sku3\",\n    title: \"House Rental\",\n    amount: 500.08,\n    date: new Date(2021, 4, 11),\n  },\n  {\n    id:\"sku4\",\n    title: \"Electricity Bill\",\n    amount: 102.98,\n    date: new Date(2022, 5, 24),\n  },\n];\n\n\nconst App = () => {\n  const [expenses, setExpenses] =useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...expenses];\n    });\n  };\n\n    return (\n    <div>\n        <NewExpense onAddExpense = {addExpenseHandler} />\n        <Expenses items = {expenses}/>\n    </div>\n  ); \n\n  //THIS IS ALTERNATIVE - Just import React from react//\n  /** return React.createElement(\n    \"div\",\n    {},\n    React.createElement(\n      \"h2\",\n      {},\n      \"Let's get started..\",\n      React.createElement(Expenses, { items: expenses })\n    )\n  ); */\n\n}\n\nexport default App; //kinahanglan eexport para maaccess or magamit sa lain nga components.\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}